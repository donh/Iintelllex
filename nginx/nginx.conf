# @conf name:		nginx/nginx.conf
#					/etc/nginx/nginx.conf
# @description:		This conf file sets configuration for nginx.
# @related issues:	ITL-003
# @param:			void
# @return:			void
# @author:			Don Hsieh
# @since:			03/30/2015
# @last modified:	03/30/2015
# @called by:		/etc/nginx
#
# Usage:
#sudo ln -sf /var/www/php/nginx/nginx.conf /etc/nginx/nginx.conf
#sudo cp /etc/nginx/nginx.conf /etc/nginx/nginx.conf_150330; sudo rm /etc/nginx/nginx.conf
##sudo cp /var/www/seo/nginx/nginx.conf /etc/nginx/nginx.conf
#sudo nginx -s reload

user www-data;
#worker_processes 4;
worker_processes auto;
worker_priority -1;
pid /run/nginx.pid;

events {
	worker_connections 1024;
	#worker_connections 768;
	multi_accept on;
}

http {
	##
	# Basic Settings
	##
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;
	client_max_body_size 20M;
	# server_tokens off;

	# server_names_hash_bucket_size 64;
	# server_name_in_redirect off;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	##
	# Logging Settings
	##
	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;
	#log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
	#				'$status $body_bytes_sent "$http_referer" '
	#				'"$http_user_agent" "$http_x_forwarded_for"';
	#access_log  logs/access.log  main;

	##
	# Gzip Settings
	##
	## ngx_http_gzip_module
	## The ngx_http_gzip_module module is a filter that compresses responses using the "gzip" method.
	## This often helps to reduce the size of transmitted data by half or even more.
	## http://nginx.org/en/docs/http/ngx_http_gzip_module.html
	gzip on;
	#gzip_disable "msie6";
	#gzip_disable "MSIE [1-6]\.(?!.*SV1)";
	gzip_disable "MSIE [1-6]\.";
	gzip_min_length 1000;
	gzip_vary on;
	gzip_proxied any;
	gzip_proxied expired no-cache no-store private auth;
	gzip_comp_level 6;
	gzip_buffers 16 8k;
	gzip_http_version 1.1;
	gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

	##
	# nginx-naxsi config
	##
	# Uncomment it if you installed nginx-naxsi
	##
	#include /etc/nginx/naxsi_core.rules;

	##
	# nginx-passenger config
	##
	# Uncomment it if you installed nginx-passenger
	##
	#passenger_root /usr;
	#passenger_ruby /usr/bin/ruby;

	fastcgi_buffers 8 16k;
	fastcgi_buffer_size 32k;
	fastcgi_connect_timeout 300;
	fastcgi_send_timeout 300;
	fastcgi_read_timeout 300;

	#For Nginx as Proxy for Apache web server, this is what you have to try:
	proxy_connect_timeout 600;
	proxy_send_timeout    600;
	proxy_read_timeout    600;
	send_timeout          600;

	## ngx_http_headers_module
	## The ngx_http_headers_module module allows adding the "Expires" and "Cache-Control" header fields, and arbitrary fields, to a response header.
	## http://nginx.org/en/docs/http/ngx_http_headers_module.html
	#expires 24h;
	#expires 7d;
	#expires epoch;
	#etag on;
	etag off;
	#add_header Cache-Control private;

	##Disabling If-Modified-Since validation
	#if_modified_since off;
	##Removing Last-Modified header
	#add_header Last-Modified "";
	add_header Pragma public;
	add_header Cache-Control "public, must-revalidate, proxy-revalidate";
	#add_header Cache-Control public;

	##
	# Virtual Host Configs
	##

	#include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*;
}


#mail {
#	# See sample authentication script at:
#	# http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript
# 
#	# auth_http localhost/auth.php;
#	# pop3_capabilities "TOP" "USER";
#	# imap_capabilities "IMAP4rev1" "UIDPLUS";
# 
#	server {
#		listen     localhost:110;
#		protocol   pop3;
#		proxy      on;
#	}
# 
#	server {
#		listen     localhost:143;
#		protocol   imap;
#		proxy      on;
#	}
#}
